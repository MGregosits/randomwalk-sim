{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmate\\\\dev\\\\cytoscape-frontend-random-walk\\\\src\\\\components\\\\MultipleSimulationsView.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport BarPlot from \"./BarPlot\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MultipleSimulationsView({\n  gridX,\n  gridY,\n  targetX,\n  targetY\n}) {\n  _s();\n  const [n, setN] = useState('');\n  const [nSims, setNSims] = useState('');\n  const [plotUrl, setPlotUrl] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const runMultipleSimulations = async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.post('http://localhost:5000/multiple_runs', {\n        n: parseInt(n),\n        n_sims: parseInt(nSims),\n        target_x: parseInt(targetX),\n        target_y: parseInt(targetY),\n        grid_x: parseInt(gridX),\n        grid_y: parseInt(gridY)\n      });\n      setPlotUrl(`http://localhost:5000/${response.data.plot_path}`);\n    } catch (error) {\n      console.error('Error running multiple simulations:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Multiple Simulations and Bar Plot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter the number of steps (n) and number of simulations:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: n,\n      onChange: e => setN(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: nSims,\n      onChange: e => setNSims(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: runMultipleSimulations,\n      children: \"Run Simulations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : plotUrl ? /*#__PURE__*/_jsxDEV(BarPlot, {\n      imageUrl: plotUrl\n    }, plotUrl, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(MultipleSimulationsView, \"lTyhj1wW575NaWQcB6rXiD3wQS0=\");\n_c = MultipleSimulationsView;\nexport default MultipleSimulationsView;\nvar _c;\n$RefreshReg$(_c, \"MultipleSimulationsView\");","map":{"version":3,"names":["React","useState","axios","BarPlot","jsxDEV","_jsxDEV","MultipleSimulationsView","gridX","gridY","targetX","targetY","_s","n","setN","nSims","setNSims","plotUrl","setPlotUrl","isLoading","setIsLoading","runMultipleSimulations","response","post","parseInt","n_sims","target_x","target_y","grid_x","grid_y","data","plot_path","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","imageUrl","_c","$RefreshReg$"],"sources":["C:/Users/gmate/dev/cytoscape-frontend-random-walk/src/components/MultipleSimulationsView.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport BarPlot from \"./BarPlot\";\r\n\r\nfunction MultipleSimulationsView({gridX, gridY, targetX, targetY}){\r\n    const [n, setN] = useState('');\r\n    const [nSims, setNSims] = useState('');\r\n    const [plotUrl, setPlotUrl] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const runMultipleSimulations = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n          const response = await axios.post('http://localhost:5000/multiple_runs', {\r\n            n: parseInt(n),\r\n            n_sims: parseInt(nSims),\r\n            target_x: parseInt(targetX),\r\n            target_y: parseInt(targetY),\r\n            grid_x: parseInt(gridX),\r\n            grid_y: parseInt(gridY)\r\n          });\r\n          setPlotUrl(`http://localhost:5000/${response.data.plot_path}`);\r\n        } catch (error) {\r\n          console.error('Error running multiple simulations:', error);\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n    };\r\n    \r\n    return(\r\n    <div>\r\n      <h2>Multiple Simulations and Bar Plot</h2>\r\n      <p>Enter the number of steps (n) and number of simulations:</p>\r\n      <input type=\"number\" value={n} onChange={e => setN(e.target.value)} />\r\n      <input type=\"number\" value={nSims} onChange={e => setNSims(e.target.value)} />\r\n      <button onClick={runMultipleSimulations}>Run Simulations</button>\r\n      {isLoading ? (\r\n        <p>Loading...</p>\r\n      ) : plotUrl ? (\r\n        <BarPlot key={plotUrl} imageUrl={plotUrl} />\r\n      ) : null}\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default MultipleSimulationsView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}