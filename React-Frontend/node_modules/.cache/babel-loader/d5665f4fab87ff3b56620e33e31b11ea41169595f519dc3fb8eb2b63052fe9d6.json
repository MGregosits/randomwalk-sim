{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmate\\\\dev\\\\randomwalk-sim\\\\React-Frontend\\\\src\\\\components\\\\QuantumPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport BarPlot from \"./BarPlot\";\nimport Heatmap from \"./Heatmap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuantumPage() {\n  _s();\n  const [number_qubits, setNumberQubits] = useState('');\n  const [iterator, setIterator] = useState('');\n  const [sample_number, setSampleNumber] = useState('');\n  const [barPlot, setBarPlot] = useState('');\n  const [heatMap, setHeatMap] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const runQuantumSimulation = async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.post('http://localhost:5000/quantum', {\n        number_qubits: parseInt(number_qubits),\n        iterator: parseInt(iterator),\n        sample_number: parseInt(sample_number)\n      });\n      setBarPlot(response.data.bar_plot_q);\n      setHeatMap(response.data.heatmap_q);\n    } catch (error) {\n      console.error('Error running quantum simulation.', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Quantum Simulation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter the number of qubits (number_qubits):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: number_qubits,\n      onChange: e => setNumberQubits(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter the iterator value (iterator):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: iterator,\n      onChange: e => setIterator(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter the sample number (sample_number):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: sample_number,\n      onChange: e => setSampleNumber(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: runQuantumSimulation,\n      children: \"Run Simulations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Bar Plot...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this) : barPlot ? /*#__PURE__*/_jsxDEV(BarPlot, {\n      barPlot: barPlot\n    }, barPlot, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this) : null, isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Bar Plot...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this) : barPlot ? /*#__PURE__*/_jsxDEV(Heatmap, {\n      heatmap: heatMap\n    }, heatMap, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(QuantumPage, \"kYNB1OJQHijfflxyuk67wCX3Z74=\");\n_c = QuantumPage;\nexport default QuantumPage;\nvar _c;\n$RefreshReg$(_c, \"QuantumPage\");","map":{"version":3,"names":["React","useState","axios","BarPlot","Heatmap","jsxDEV","_jsxDEV","QuantumPage","_s","number_qubits","setNumberQubits","iterator","setIterator","sample_number","setSampleNumber","barPlot","setBarPlot","heatMap","setHeatMap","isLoading","setIsLoading","runQuantumSimulation","response","post","parseInt","data","bar_plot_q","heatmap_q","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","heatmap","_c","$RefreshReg$"],"sources":["C:/Users/gmate/dev/randomwalk-sim/React-Frontend/src/components/QuantumPage.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport BarPlot from \"./BarPlot\";\r\nimport Heatmap from \"./Heatmap\";\r\n\r\nfunction QuantumPage() {\r\n    const [number_qubits, setNumberQubits] = useState('');\r\n    const [iterator, setIterator] = useState('');\r\n    const [sample_number, setSampleNumber] = useState('');\r\n    const [barPlot, setBarPlot] = useState('');\r\n    const [heatMap, setHeatMap] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const runQuantumSimulation = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/quantum', {\r\n                number_qubits: parseInt(number_qubits),\r\n                iterator: parseInt(iterator),\r\n                sample_number: parseInt(sample_number)\r\n            });\r\n            setBarPlot(response.data.bar_plot_q);\r\n            setHeatMap(response.data.heatmap_q);\r\n        } catch (error) {\r\n            console.error('Error running quantum simulation.', error);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div>\r\n          <h2>Quantum Simulation</h2>\r\n          <p>Enter the number of qubits (number_qubits):</p>\r\n          <input type=\"number\" value={number_qubits} onChange={e => setNumberQubits(e.target.value)} />\r\n          <p>Enter the iterator value (iterator):</p>\r\n          <input type=\"number\" value={iterator} onChange={e => setIterator(e.target.value)} />\r\n          <p>Enter the sample number (sample_number):</p>\r\n          <input type=\"number\" value={sample_number} onChange={e => setSampleNumber(e.target.value)} />\r\n          <button onClick={runQuantumSimulation}>Run Simulations</button>\r\n          {isLoading ? (\r\n            <p>Loading Bar Plot...</p>\r\n          ) : barPlot ? (\r\n            <BarPlot key={barPlot} barPlot={barPlot} />\r\n          ) : null}\r\n          {isLoading ? (\r\n            <p>Loading Bar Plot...</p>\r\n          ) : barPlot ? (\r\n            <Heatmap key={heatMap} heatmap={heatMap} />\r\n          ) : null}\r\n        </div>\r\n        );}\r\n\r\nexport default QuantumPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}